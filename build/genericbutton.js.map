{"version":3,"file":"genericbutton.js","mappings":"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","sources":["webpack://fictional-university-theme/./node_modules/@wordpress/icons/build-module/library/link.js","webpack://fictional-university-theme/./inc/ourColors.js","webpack://fictional-university-theme/external window [\"wp\",\"blockEditor\"]","webpack://fictional-university-theme/external window [\"wp\",\"blocks\"]","webpack://fictional-university-theme/external window [\"wp\",\"components\"]","webpack://fictional-university-theme/external window [\"wp\",\"element\"]","webpack://fictional-university-theme/external window [\"wp\",\"primitives\"]","webpack://fictional-university-theme/webpack/bootstrap","webpack://fictional-university-theme/webpack/runtime/compat get default export","webpack://fictional-university-theme/webpack/runtime/define property getters","webpack://fictional-university-theme/webpack/runtime/hasOwnProperty shorthand","webpack://fictional-university-theme/webpack/runtime/make namespace object","webpack://fictional-university-theme/./our-blocks/genericbutton.js"],"sourcesContent":["import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst link = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M15.6 7.2H14v1.5h1.6c2 0 3.7 1.7 3.7 3.7s-1.7 3.7-3.7 3.7H14v1.5h1.6c2.8 0 5.2-2.3 5.2-5.2 0-2.9-2.3-5.2-5.2-5.2zM4.7 12.4c0-2 1.7-3.7 3.7-3.7H10V7.2H8.4c-2.9 0-5.2 2.3-5.2 5.2 0 2.9 2.3 5.2 5.2 5.2H10v-1.5H8.4c-2 0-3.7-1.7-3.7-3.7zm4.6.9h5.3v-1.5H9.3v1.5z\"\n}));\nexport default link;\n//# sourceMappingURL=link.js.map","const ourColors = [\r\n  { name: \"blue\", color: \"#0d3b66\" },\r\n  { name: \"orange\", color: \"#ee964b\" },\r\n  { name: \"dark-orange\", color: \"#f95738\" }\r\n]\r\n\r\nexport default ourColors\r\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"primitives\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import ourColors from \"../inc/ourColors\"\r\nimport { link } from \"@wordpress/icons\"\r\nimport { ToolbarGroup, ToolbarButton, Popover, Button, PanelBody, PanelRow, ColorPalette } from \"@wordpress/components\"\r\nimport { RichText, InspectorControls, BlockControls, __experimentalLinkControl as LinkControl, getColorObjectByColorValue } from \"@wordpress/block-editor\"\r\nimport { registerBlockType } from \"@wordpress/blocks\"\r\nimport { useState } from \"@wordpress/element\"\r\n\r\nregisterBlockType(\"ourblocktheme/genericbutton\", {\r\n  title: \"Generic Button\",\r\n  attributes: {\r\n    text: { type: \"string\" },\r\n    size: { type: \"string\", default: \"large\" },\r\n    linkObject: { type: \"object\", default: { url: \"\" } },\r\n    // linkObject is for the URL of the button. -- the LinkControl stores multiple peices of data, which is why we have to set the data type as an object.\r\n    //We set a default value becuase the button won't show up on the front-end if the person forgot to enter a url if there's no props.attributes.linkObject.url\r\n    colorName: { type: \"string\", default: \"blue\" }\r\n  },\r\n  edit: EditComponent,\r\n  save: SaveComponent\r\n})\r\n\r\nfunction EditComponent(props) {\r\n  const [isLinkPickerVisible, setIsLinkPickerVisible] = useState(false)\r\n  //We are using react state instead of using an attribute becuase it's so small, whether the link button is clicked or not. \r\n\r\n  function handleTextChange(x) {\r\n    props.setAttributes({ text: x })\r\n  }\r\n\r\n  function buttonHandler() {\r\n    setIsLinkPickerVisible(prev => !prev)\r\n    //For toggling - set to the opposite.\r\n  }\r\n\r\n  function handleLinkChange(newLink) {\r\n    props.setAttributes({ linkObject: newLink })\r\n  } //the LinkControl creates an object for the post/page that's sepected.  -- You can view the object in Adminer - wp_posts - Go to the last page and view the last item. It will list the linkObject details.\r\n\r\n  //If the color name being looped over matches our attribute colorName, then it's included, and we pull out the color value (such as blue).\r\n  const currentColorValue = ourColors.filter(color => {\r\n    return color.name == props.attributes.colorName\r\n  })[0].color\r\n\r\n  function handleColorChange(colorCode) {\r\n    // from the hex value that the color palette gives us, we need to find its color name\r\n    // getColorObjectByColorValue - first param - the array of colors, second is the color code that was just passed in (the hex code) -- it will return the entire object from the first param that matches the second. Then we destructure out the property of name (such as blue, orange, etc. -- whichever one matches)\r\n    const { name } = getColorObjectByColorValue(ourColors, colorCode)\r\n    props.setAttributes({ colorName: name })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BlockControls>\r\n        <ToolbarGroup>\r\n            {/* This las the link icon for the link url to be added for the button: */}\r\n          <ToolbarButton onClick={buttonHandler} icon={link} />\r\n        </ToolbarGroup>\r\n        <ToolbarGroup>\r\n          <ToolbarButton isPressed={props.attributes.size === \"large\"} onClick={() => props.setAttributes({ size: \"large\" })}>\r\n            Large\r\n          </ToolbarButton>\r\n          <ToolbarButton isPressed={props.attributes.size === \"medium\"} onClick={() => props.setAttributes({ size: \"medium\" })}>\r\n            Medium\r\n          </ToolbarButton>\r\n          <ToolbarButton isPressed={props.attributes.size === \"small\"} onClick={() => props.setAttributes({ size: \"small\" })}>\r\n            Small\r\n          </ToolbarButton>\r\n        </ToolbarGroup>\r\n      </BlockControls>\r\n      {/* This creates a Color option in the right sidebar */}\r\n      <InspectorControls>\r\n        <PanelBody title=\"Color\" initialOpen={true}>\r\n          <PanelRow>\r\n            {/* Colors is an array of colors the users can choose between. */}\r\n            <ColorPalette disableCustomColors={true} clearable={false} colors={ourColors} value={currentColorValue} onChange={handleColorChange} />\r\n            {/* disableCustomColors={true} ensure the user can't choose a color outside of our palette. clearable={false} removes the clear button */}\r\n          </PanelRow>\r\n        </PanelBody>\r\n      </InspectorControls>\r\n      <RichText allowedFormats={[]} tagName=\"a\" className={`btn btn--${props.attributes.size} btn--${props.attributes.colorName}`} value={props.attributes.text} onChange={handleTextChange} />\r\n      {/* If the link picker is visible, the popover will be visible so the user can see an entry area to enter the link or search for a page on the website by name. */}\r\n      {isLinkPickerVisible && (\r\n        <Popover position=\"middle center\" onFocusOutside={() => setIsLinkPickerVisible(false)}>\r\n            {/* This creates a field where someone can enter a URL or they can search the wordpress site for a page: */}\r\n          <LinkControl settings={[]} value={props.attributes.linkObject} onChange={handleLinkChange} />\r\n          {/* This is the close button, after they finish updating the link: */}\r\n          <Button variant=\"primary\" onClick={() => setIsLinkPickerVisible(false)} style={{ display: \"block\", width: \"100%\" }}>\r\n            Confirm Link\r\n          </Button>\r\n        </Popover>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nfunction SaveComponent(props) {\r\n  return (\r\n    <a href={props.attributes.linkObject.url} className={`btn btn--${props.attributes.size} btn--${props.attributes.colorName}`}>\r\n      {props.attributes.text}\r\n    </a>\r\n  )\r\n}\r\n"],"names":["ourColors","name","color","link","ToolbarGroup","ToolbarButton","Popover","Button","PanelBody","PanelRow","ColorPalette","RichText","InspectorControls","BlockControls","__experimentalLinkControl","LinkControl","getColorObjectByColorValue","registerBlockType","useState","title","attributes","text","type","size","default","linkObject","url","colorName","edit","EditComponent","save","SaveComponent","props","isLinkPickerVisible","setIsLinkPickerVisible","handleTextChange","x","setAttributes","buttonHandler","prev","handleLinkChange","newLink","currentColorValue","filter","handleColorChange","colorCode","createElement","Fragment","onClick","icon","isPressed","initialOpen","disableCustomColors","clearable","colors","value","onChange","allowedFormats","tagName","className","position","onFocusOutside","settings","variant","style","display","width","href"],"sourceRoot":""}